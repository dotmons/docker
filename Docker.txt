to access ubuntu>
docker run --interactive --tty ubuntu bash


docker rm <container id> --> Used to remove the container
docker rmi ubuntu   --> Used to remove images from system

docker ps -a        --> Used to list all the container installed with its ID

docker run ubuntu  --> Used to download ubuntu image to docker
docker images      --> Used to preview images on docker

docker run -it ubuntu bash  --> Used to gain access to ubuntu shell after installing and running it. This enables the bash command

docker logs 58d8ff6208f2 --> docker logs <container id>, used to get all the logs or commands executed within that container id

docker-compose up -d  --> Used to run and execute settings made on docker-compose.yml file 

docker run --name easql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=Dotty123 -d mysql/mysql-server:latest --> Used to create mysql container from downloaded images and assign port
docker run --name phpmydotmons -d --link easql:db -p 8086:80 phpmyadmin/phpmyadmin                --> Used to create phpmyadmin; and also to link it to mysql

docker run --name eawordpress -e WORDPRESS_DB_HOST=192.168.99.100:3306 \ -e WORDPRESS_DB_USER=wordpress \ -e WORDPRESS_DB_PASSWORD=wordpress -d wordpress

docker run --name eawordpress --link easql -p 8080:80 -e WORDPRESS_DB_HOST=easql:3306 -e WORDPRESS_DB_USER=wordpress -e WORDPRESS_DB_PASSWORD=wordpress -e WORDPRESS_DB_NAME=wordpress -e WORDPRESS_TABLE_PREFIX=wp_ -d wordpress

docker run -dit --name my-apache-app -p 8080:80 -v "DIR":/usr/local/apache2/htdocs/ httpd:2.4 --> Used to start httpd (Windows)
docker run -dit --name my-apache-app -p 8080:80 -v "$PWD":/usr/local/apache2/htdocs/ httpd:2.4 --> Used to start httpd Linux
docker run -d -p 80:80 httpd:2.4 --> Used to start httpd


docker build -t recapitulate .   --> Used to build and create a docker image from a Dockerfile executor

e.g of a Dockerfile:
FROM ubuntu:latest
RUN apt-get -y update
RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install apache2
COPY index.html /var/www/html
EXPOSE 80
CMD apachectl -D FOREGROUND


docker run -dit -p 80:80 imagename --> Used to run a container from apache2


To create a registry of docker and push to gitlab:

1. docker login registry.gitlab.com
2. docker build -t registry.gitlab.com/dotmons/gitlab-cicd-tutorial .
3. docker push registry.gitlab.com/dotmons/gitlab-cicd-tutorial

